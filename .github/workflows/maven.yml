# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    - name: Datadog Static Analysis
      uses: DataDog/datadog-static-analyzer-github-action@v1.0.9
      with:
    # Your Datadog API key used to authenticate requests.
        dd_api_key: # default is 
    # Your Datadog Application key used to authenticate requests.
        dd_app_key: # default is 
    # The service you want your results tagged with.
        dd_service: # default is 
    # The environment you want your results tagged with.
        dd_env: # optional, default is none
    # The Datadog site. For example, users in the EU may want to set datadoghq.eu.
        dd_site: # optional, default is datadoghq.com
    # Set the number of CPUs used to by the analyzer.
        cpu_count: # optional, default is 2
    # Get the execution time statistics for analyzed files.
        enable_performance_statistics: # optional, default is false
    # (Currently for internal use) Enable secrets scanning
        enable_secrets: # optional, default is false
    # Lets the analyzer print additional logs useful for debugging.
        debug: # optional, default is no
    # Enable Software Composition Analysis (SCA)
        sca_enabled: # optional, default is false
    # The subdirectory path the analysis should be limited to.
        subdirectory: # optional, default is 
    # The architecture of the image to use. Can be x86_64 or aarch64.
        architecture: # optional, default is x86_64
    # Enable diff aware scanning mode.
        diff_aware: # optional, default is false
          

